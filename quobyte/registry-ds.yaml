apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: registry
spec:
  template:
    metadata:
      labels:
        role: registry
        version: VERSION
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
            {
                "name": "init-devices",
                "image": "johscheuer/device_formatter:0.1",
                "imagePullPolicy": "Always",
                "securityContext": {
                  "privileged": true
                },
                "hostPID": true
            }
        ]'
    spec:
      containers:
        - name: quobyte-registry
          image: quay.io/quobyte/quobyte-server:VERSION
          securityContext:
            privileged: true
          env:
            - name: QUOBYTE_SERVICE
              value: registry
            - name: QUOBYTE_REGISTRY
              value: _quobyte._tcp.registry
            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: QUOBYTE_EXTRA_SERVICE_CONFIG
              value: >
                constants.automation.manage_registry_replicas=true
          ports:
            - name: rpc-tcp
              containerPort: 7861
              protocol: TCP
            - name: rpc-udp
              containerPort: 7861
              protocol: UDP
            - name: http
              containerPort: 7871
              protocol: TCP
          volumeMounts:
            - name: devices
              mountPath: /devices/dev1
          command:
            - /bin/bash
            - -xec
            - |
              hostname $NODENAME
              sed "s/.*MIN_MEM_REGISTRY=.*/MIN_MEM_REGISTRY=${MIN_MEM}/" -i /etc/default/quobyte
              sed "s/.*MAX_MEM_REGISTRY=.*/MAX_MEM_REGISTRY=${MAX_MEM}/" -i /etc/default/quobyte
              # TODO if directory is empty skip -> /dev1 needed?
              # [ ! "$(ls -A /devices)" ] &&
              if [ ! -f /devices/dev1/QUOBYTE_DEV_SETUP ]; then
                mkdir -p /devices/dev1
                cat > /devices/dev1/QUOBYTE_DEV_SETUP <<EOF
              device.serial=$(uuidgen)
              device.model=Kubernetes-hostDir
              device.type=DIR_DEVICE
              EOF
                if [ $(nslookup ${QUOBYTE_REGISTRY} | grep -A10 -m1 -e 'Name:' | wc -l) == 0 ]; then
                  echo "device.bootstrap=true" >> /devices/dev1/QUOBYTE_DEV_SETUP
                fi
              fi

              if [ ! -f /devices/UUID ]; then
                echo uuid=$(uuidgen) >> /devices/UUID
              fi

              cat /devices/UUID >> /etc/quobyte/$QUOBYTE_SERVICE.cfg

              exec /bin/bash -x /opt/main.sh
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-xc", "qmgmt -u api registry remove $(grep device.id= /devices/dev1/QUOBYTE_DEV_ID | cut -d= -f2)"]
          readinessProbe:
            timeoutSeconds: 5
            httpGet:
              port: 7871
              path: /
          livenessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 5
            httpGet:
              port: 7871
              path: /
      nodeSelector:
        quobyte_registry: "true"
      volumes:
      - name: devices
        hostPath:
          path: /mnt/registry
